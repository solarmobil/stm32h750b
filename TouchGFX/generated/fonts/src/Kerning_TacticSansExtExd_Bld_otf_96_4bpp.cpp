#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_TacticSansExtExd_Bld_otf_96_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0031, -13 },  // (First char = [0x0031, one], Second char = [0x0022, quotedbl], Kerning dist = -13)
    { 0x004C, -12 },  // (First char = [0x004C, L], Second char = [0x0022, quotedbl], Kerning dist = -12)
    { 0x0031, -13 },  // (First char = [0x0031, one], Second char = [0x0027, quotesingle], Kerning dist = -13)
    { 0x004C, -12 },  // (First char = [0x004C, L], Second char = [0x0027, quotesingle], Kerning dist = -12)
    { 0x0031, -6 },  // (First char = [0x0031, one], Second char = [0x002B, plus], Kerning dist = -6)
    { 0x0037, -6 },  // (First char = [0x0037, seven], Second char = [0x002B, plus], Kerning dist = -6)
    { 0x004B, -15 },  // (First char = [0x004B, K], Second char = [0x002B, plus], Kerning dist = -15)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x002B, plus], Kerning dist = -5)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x002B, plus], Kerning dist = -6)
    { 0x0056, -11 },  // (First char = [0x0056, V], Second char = [0x002B, plus], Kerning dist = -11)
    { 0x0057, -8 },  // (First char = [0x0057, W], Second char = [0x002B, plus], Kerning dist = -8)
    { 0x0058, -15 },  // (First char = [0x0058, X], Second char = [0x002B, plus], Kerning dist = -15)
    { 0x0059, -17 },  // (First char = [0x0059, Y], Second char = [0x002B, plus], Kerning dist = -17)
    { 0x005A, -6 },  // (First char = [0x005A, Z], Second char = [0x002B, plus], Kerning dist = -6)
    { 0x006B, -6 },  // (First char = [0x006B, k], Second char = [0x002B, plus], Kerning dist = -6)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x002B, plus], Kerning dist = -1)
    { 0x0078, -6 },  // (First char = [0x0078, x], Second char = [0x002B, plus], Kerning dist = -6)
    { 0x0037, -13 },  // (First char = [0x0037, seven], Second char = [0x002C, comma], Kerning dist = -13)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x004C,  2 },  // (First char = [0x004C, L], Second char = [0x002C, comma], Kerning dist = 2)
    { 0x0050, -4 },  // (First char = [0x0050, P], Second char = [0x002C, comma], Kerning dist = -4)
    { 0x0054, -13 },  // (First char = [0x0054, T], Second char = [0x002C, comma], Kerning dist = -13)
    { 0x0056, -15 },  // (First char = [0x0056, V], Second char = [0x002C, comma], Kerning dist = -15)
    { 0x0057, -12 },  // (First char = [0x0057, W], Second char = [0x002C, comma], Kerning dist = -12)
    { 0x0059, -16 },  // (First char = [0x0059, Y], Second char = [0x002C, comma], Kerning dist = -16)
    { 0x0066, -4 },  // (First char = [0x0066, f], Second char = [0x002C, comma], Kerning dist = -4)
    { 0x0072, -8 },  // (First char = [0x0072, r], Second char = [0x002C, comma], Kerning dist = -8)
    { 0x0076, -11 },  // (First char = [0x0076, v], Second char = [0x002C, comma], Kerning dist = -11)
    { 0x0077, -9 },  // (First char = [0x0077, w], Second char = [0x002C, comma], Kerning dist = -9)
    { 0x0079, -11 },  // (First char = [0x0079, y], Second char = [0x002C, comma], Kerning dist = -11)
    { 0x0031, -6 },  // (First char = [0x0031, one], Second char = [0x002D, hyphen], Kerning dist = -6)
    { 0x0037, -6 },  // (First char = [0x0037, seven], Second char = [0x002D, hyphen], Kerning dist = -6)
    { 0x004B, -15 },  // (First char = [0x004B, K], Second char = [0x002D, hyphen], Kerning dist = -15)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x002D, hyphen], Kerning dist = -5)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x002D, hyphen], Kerning dist = -6)
    { 0x0056, -11 },  // (First char = [0x0056, V], Second char = [0x002D, hyphen], Kerning dist = -11)
    { 0x0057, -8 },  // (First char = [0x0057, W], Second char = [0x002D, hyphen], Kerning dist = -8)
    { 0x0058, -15 },  // (First char = [0x0058, X], Second char = [0x002D, hyphen], Kerning dist = -15)
    { 0x0059, -17 },  // (First char = [0x0059, Y], Second char = [0x002D, hyphen], Kerning dist = -17)
    { 0x005A, -6 },  // (First char = [0x005A, Z], Second char = [0x002D, hyphen], Kerning dist = -6)
    { 0x006B, -6 },  // (First char = [0x006B, k], Second char = [0x002D, hyphen], Kerning dist = -6)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0078, -6 },  // (First char = [0x0078, x], Second char = [0x002D, hyphen], Kerning dist = -6)
    { 0x0037, -13 },  // (First char = [0x0037, seven], Second char = [0x002E, period], Kerning dist = -13)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x002E, period], Kerning dist = -1)
    { 0x004C,  2 },  // (First char = [0x004C, L], Second char = [0x002E, period], Kerning dist = 2)
    { 0x0050, -4 },  // (First char = [0x0050, P], Second char = [0x002E, period], Kerning dist = -4)
    { 0x0054, -13 },  // (First char = [0x0054, T], Second char = [0x002E, period], Kerning dist = -13)
    { 0x0056, -15 },  // (First char = [0x0056, V], Second char = [0x002E, period], Kerning dist = -15)
    { 0x0057, -12 },  // (First char = [0x0057, W], Second char = [0x002E, period], Kerning dist = -12)
    { 0x0059, -16 },  // (First char = [0x0059, Y], Second char = [0x002E, period], Kerning dist = -16)
    { 0x0066, -4 },  // (First char = [0x0066, f], Second char = [0x002E, period], Kerning dist = -4)
    { 0x0072, -8 },  // (First char = [0x0072, r], Second char = [0x002E, period], Kerning dist = -8)
    { 0x0076, -11 },  // (First char = [0x0076, v], Second char = [0x002E, period], Kerning dist = -11)
    { 0x0077, -9 },  // (First char = [0x0077, w], Second char = [0x002E, period], Kerning dist = -9)
    { 0x0079, -11 },  // (First char = [0x0079, y], Second char = [0x002E, period], Kerning dist = -11)
    { 0x0037, -16 },  // (First char = [0x0037, seven], Second char = [0x002F, slash], Kerning dist = -16)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x002F, slash], Kerning dist = -4)
    { 0x0050, -3 },  // (First char = [0x0050, P], Second char = [0x002F, slash], Kerning dist = -3)
    { 0x0054, -14 },  // (First char = [0x0054, T], Second char = [0x002F, slash], Kerning dist = -14)
    { 0x0056, -18 },  // (First char = [0x0056, V], Second char = [0x002F, slash], Kerning dist = -18)
    { 0x0057, -13 },  // (First char = [0x0057, W], Second char = [0x002F, slash], Kerning dist = -13)
    { 0x0059, -22 },  // (First char = [0x0059, Y], Second char = [0x002F, slash], Kerning dist = -22)
    { 0x0072, -9 },  // (First char = [0x0072, r], Second char = [0x002F, slash], Kerning dist = -9)
    { 0x0076, -11 },  // (First char = [0x0076, v], Second char = [0x002F, slash], Kerning dist = -11)
    { 0x0077, -8 },  // (First char = [0x0077, w], Second char = [0x002F, slash], Kerning dist = -8)
    { 0x0079, -11 },  // (First char = [0x0079, y], Second char = [0x002F, slash], Kerning dist = -11)
    { 0x0031, -1 },  // (First char = [0x0031, one], Second char = [0x0030, zero], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x0030, zero], Kerning dist = -1)
    { 0x0034, -2 },  // (First char = [0x0034, four], Second char = [0x0031, one], Kerning dist = -2)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x0032, two], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x0033, three], Kerning dist = -1)
    { 0x0022, -6 },  // (First char = [0x0022, quotedbl], Second char = [0x0034, four], Kerning dist = -6)
    { 0x0027, -6 },  // (First char = [0x0027, quotesingle], Second char = [0x0034, four], Kerning dist = -6)
    { 0x002F, -12 },  // (First char = [0x002F, slash], Second char = [0x0034, four], Kerning dist = -12)
    { 0x0031, -3 },  // (First char = [0x0031, one], Second char = [0x0034, four], Kerning dist = -3)
    { 0x0037, -17 },  // (First char = [0x0037, seven], Second char = [0x0034, four], Kerning dist = -17)
    { 0x0034, -1 },  // (First char = [0x0034, four], Second char = [0x0035, five], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x0036, six], Kerning dist = -1)
    { 0x002C, -10 },  // (First char = [0x002C, comma], Second char = [0x0037, seven], Kerning dist = -10)
    { 0x002E, -10 },  // (First char = [0x002E, period], Second char = [0x0037, seven], Kerning dist = -10)
    { 0x0030, -1 },  // (First char = [0x0030, zero], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x0031, -18 },  // (First char = [0x0031, one], Second char = [0x0037, seven], Kerning dist = -18)
    { 0x0032, -1 },  // (First char = [0x0032, two], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x0033, -1 },  // (First char = [0x0033, three], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x0034, -10 },  // (First char = [0x0034, four], Second char = [0x0037, seven], Kerning dist = -10)
    { 0x0035, -1 },  // (First char = [0x0035, five], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x0036, -2 },  // (First char = [0x0036, six], Second char = [0x0037, seven], Kerning dist = -2)
    { 0x0038, -1 },  // (First char = [0x0038, eight], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x0039, -1 },  // (First char = [0x0039, nine], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x0038, eight], Kerning dist = -1)
    { 0x0031, -2 },  // (First char = [0x0031, one], Second char = [0x0039, nine], Kerning dist = -2)
    { 0x0034, -1 },  // (First char = [0x0034, four], Second char = [0x0039, nine], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x0039, nine], Kerning dist = -1)
    { 0x0022, -12 },  // (First char = [0x0022, quotedbl], Second char = [0x0041, A], Kerning dist = -12)
    { 0x0027, -12 },  // (First char = [0x0027, quotesingle], Second char = [0x0041, A], Kerning dist = -12)
    { 0x002C,  1 },  // (First char = [0x002C, comma], Second char = [0x0041, A], Kerning dist = 1)
    { 0x002E,  1 },  // (First char = [0x002E, period], Second char = [0x0041, A], Kerning dist = 1)
    { 0x002F, -18 },  // (First char = [0x002F, slash], Second char = [0x0041, A], Kerning dist = -18)
    { 0x0042, -3 },  // (First char = [0x0042, B], Second char = [0x0041, A], Kerning dist = -3)
    { 0x0043, -4 },  // (First char = [0x0043, C], Second char = [0x0041, A], Kerning dist = -4)
    { 0x0044, -6 },  // (First char = [0x0044, D], Second char = [0x0041, A], Kerning dist = -6)
    { 0x0046, -11 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -11)
    { 0x0047, -4 },  // (First char = [0x0047, G], Second char = [0x0041, A], Kerning dist = -4)
    { 0x004A, -5 },  // (First char = [0x004A, J], Second char = [0x0041, A], Kerning dist = -5)
    { 0x004F, -4 },  // (First char = [0x004F, O], Second char = [0x0041, A], Kerning dist = -4)
    { 0x0050, -12 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -12)
    { 0x0051, -4 },  // (First char = [0x0051, Q], Second char = [0x0041, A], Kerning dist = -4)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0053, -3 },  // (First char = [0x0053, S], Second char = [0x0041, A], Kerning dist = -3)
    { 0x0054, -22 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -22)
    { 0x0055, -5 },  // (First char = [0x0055, U], Second char = [0x0041, A], Kerning dist = -5)
    { 0x0056, -23 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -23)
    { 0x0057, -18 },  // (First char = [0x0057, W], Second char = [0x0041, A], Kerning dist = -18)
    { 0x0059, -25 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -25)
    { 0x004B, -5 },  // (First char = [0x004B, K], Second char = [0x0043, C], Kerning dist = -5)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0043, C], Kerning dist = -4)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0043, C], Kerning dist = -3)
    { 0x0058, -4 },  // (First char = [0x0058, X], Second char = [0x0043, C], Kerning dist = -4)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0043, C], Kerning dist = -5)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004B, -5 },  // (First char = [0x004B, K], Second char = [0x0047, G], Kerning dist = -5)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0047, G], Kerning dist = -4)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0047, G], Kerning dist = -3)
    { 0x0058, -4 },  // (First char = [0x0058, X], Second char = [0x0047, G], Kerning dist = -4)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0047, G], Kerning dist = -5)
    { 0x0022, -7 },  // (First char = [0x0022, quotedbl], Second char = [0x004A, J], Kerning dist = -7)
    { 0x0027, -7 },  // (First char = [0x0027, quotesingle], Second char = [0x004A, J], Kerning dist = -7)
    { 0x002F, -12 },  // (First char = [0x002F, slash], Second char = [0x004A, J], Kerning dist = -12)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x004A, J], Kerning dist = -1)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x004A, J], Kerning dist = -3)
    { 0x0054, -18 },  // (First char = [0x0054, T], Second char = [0x004A, J], Kerning dist = -18)
    { 0x0056, -18 },  // (First char = [0x0056, V], Second char = [0x004A, J], Kerning dist = -18)
    { 0x0057, -12 },  // (First char = [0x0057, W], Second char = [0x004A, J], Kerning dist = -12)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x004A, J], Kerning dist = -3)
    { 0x0059, -25 },  // (First char = [0x0059, Y], Second char = [0x004A, J], Kerning dist = -25)
    { 0x004B, -5 },  // (First char = [0x004B, K], Second char = [0x004F, O], Kerning dist = -5)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x004F, O], Kerning dist = -4)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x004F, O], Kerning dist = -3)
    { 0x0058, -4 },  // (First char = [0x0058, X], Second char = [0x004F, O], Kerning dist = -4)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x004F, O], Kerning dist = -5)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x004F, O], Kerning dist = -1)
    { 0x004B, -5 },  // (First char = [0x004B, K], Second char = [0x0051, Q], Kerning dist = -5)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0051, Q], Kerning dist = -4)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0051, Q], Kerning dist = -3)
    { 0x0058, -4 },  // (First char = [0x0058, X], Second char = [0x0051, Q], Kerning dist = -4)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0051, Q], Kerning dist = -5)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x004B, -4 },  // (First char = [0x004B, K], Second char = [0x0053, S], Kerning dist = -4)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0053, S], Kerning dist = -4)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0053, S], Kerning dist = -3)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x0053, S], Kerning dist = -3)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0053, S], Kerning dist = -4)
    { 0x002C, -13 },  // (First char = [0x002C, comma], Second char = [0x0054, T], Kerning dist = -13)
    { 0x002E, -13 },  // (First char = [0x002E, period], Second char = [0x0054, T], Kerning dist = -13)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004C, -25 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -25)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0055, U], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0055, U], Kerning dist = -1)
    { 0x002C, -15 },  // (First char = [0x002C, comma], Second char = [0x0056, V], Kerning dist = -15)
    { 0x002E, -15 },  // (First char = [0x002E, period], Second char = [0x0056, V], Kerning dist = -15)
    { 0x0042, -4 },  // (First char = [0x0042, B], Second char = [0x0056, V], Kerning dist = -4)
    { 0x0043, -4 },  // (First char = [0x0043, C], Second char = [0x0056, V], Kerning dist = -4)
    { 0x0044, -6 },  // (First char = [0x0044, D], Second char = [0x0056, V], Kerning dist = -6)
    { 0x0047, -4 },  // (First char = [0x0047, G], Second char = [0x0056, V], Kerning dist = -4)
    { 0x004C, -21 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -21)
    { 0x004F, -4 },  // (First char = [0x004F, O], Second char = [0x0056, V], Kerning dist = -4)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0051, -4 },  // (First char = [0x0051, Q], Second char = [0x0056, V], Kerning dist = -4)
    { 0x0052, -3 },  // (First char = [0x0052, R], Second char = [0x0056, V], Kerning dist = -3)
    { 0x0053, -4 },  // (First char = [0x0053, S], Second char = [0x0056, V], Kerning dist = -4)
    { 0x002C, -12 },  // (First char = [0x002C, comma], Second char = [0x0057, W], Kerning dist = -12)
    { 0x002E, -12 },  // (First char = [0x002E, period], Second char = [0x0057, W], Kerning dist = -12)
    { 0x0042, -3 },  // (First char = [0x0042, B], Second char = [0x0057, W], Kerning dist = -3)
    { 0x0043, -3 },  // (First char = [0x0043, C], Second char = [0x0057, W], Kerning dist = -3)
    { 0x0044, -5 },  // (First char = [0x0044, D], Second char = [0x0057, W], Kerning dist = -5)
    { 0x0047, -3 },  // (First char = [0x0047, G], Second char = [0x0057, W], Kerning dist = -3)
    { 0x004C, -14 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -14)
    { 0x004F, -3 },  // (First char = [0x004F, O], Second char = [0x0057, W], Kerning dist = -3)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0051, -3 },  // (First char = [0x0051, Q], Second char = [0x0057, W], Kerning dist = -3)
    { 0x0052, -3 },  // (First char = [0x0052, R], Second char = [0x0057, W], Kerning dist = -3)
    { 0x0053, -3 },  // (First char = [0x0053, S], Second char = [0x0057, W], Kerning dist = -3)
    { 0x0042, -4 },  // (First char = [0x0042, B], Second char = [0x0058, X], Kerning dist = -4)
    { 0x0043, -4 },  // (First char = [0x0043, C], Second char = [0x0058, X], Kerning dist = -4)
    { 0x0044, -6 },  // (First char = [0x0044, D], Second char = [0x0058, X], Kerning dist = -6)
    { 0x0047, -4 },  // (First char = [0x0047, G], Second char = [0x0058, X], Kerning dist = -4)
    { 0x004F, -4 },  // (First char = [0x004F, O], Second char = [0x0058, X], Kerning dist = -4)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0051, -4 },  // (First char = [0x0051, Q], Second char = [0x0058, X], Kerning dist = -4)
    { 0x0053, -3 },  // (First char = [0x0053, S], Second char = [0x0058, X], Kerning dist = -3)
    { 0x0055, -2 },  // (First char = [0x0055, U], Second char = [0x0058, X], Kerning dist = -2)
    { 0x002C, -16 },  // (First char = [0x002C, comma], Second char = [0x0059, Y], Kerning dist = -16)
    { 0x002E, -16 },  // (First char = [0x002E, period], Second char = [0x0059, Y], Kerning dist = -16)
    { 0x0042, -4 },  // (First char = [0x0042, B], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x0043, -5 },  // (First char = [0x0043, C], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x0044, -7 },  // (First char = [0x0044, D], Second char = [0x0059, Y], Kerning dist = -7)
    { 0x0047, -5 },  // (First char = [0x0047, G], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x004C, -27 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -27)
    { 0x004F, -5 },  // (First char = [0x004F, O], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x0050, -3 },  // (First char = [0x0050, P], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0051, -5 },  // (First char = [0x0051, Q], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x0052, -4 },  // (First char = [0x0052, R], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x0053, -4 },  // (First char = [0x0053, S], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x005A, Z], Kerning dist = -2)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x002F, -9 },  // (First char = [0x002F, slash], Second char = [0x0061, a], Kerning dist = -9)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0061, a], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -7)
    { 0x0056, -14 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -14)
    { 0x0057, -10 },  // (First char = [0x0057, W], Second char = [0x0061, a], Kerning dist = -10)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0059, -18 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -18)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x0061, a], Kerning dist = -2)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x0061, a], Kerning dist = -3)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0076, -4 },  // (First char = [0x0076, v], Second char = [0x0061, a], Kerning dist = -4)
    { 0x0077, -4 },  // (First char = [0x0077, w], Second char = [0x0061, a], Kerning dist = -4)
    { 0x0078, -3 },  // (First char = [0x0078, x], Second char = [0x0061, a], Kerning dist = -3)
    { 0x0079, -4 },  // (First char = [0x0079, y], Second char = [0x0061, a], Kerning dist = -4)
    { 0x002F, -7 },  // (First char = [0x002F, slash], Second char = [0x0063, c], Kerning dist = -7)
    { 0x004B, -4 },  // (First char = [0x004B, K], Second char = [0x0063, c], Kerning dist = -4)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -7)
    { 0x0056, -12 },  // (First char = [0x0056, V], Second char = [0x0063, c], Kerning dist = -12)
    { 0x0057, -9 },  // (First char = [0x0057, W], Second char = [0x0063, c], Kerning dist = -9)
    { 0x0058, -4 },  // (First char = [0x0058, X], Second char = [0x0063, c], Kerning dist = -4)
    { 0x0059, -17 },  // (First char = [0x0059, Y], Second char = [0x0063, c], Kerning dist = -17)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x0063, c], Kerning dist = -3)
    { 0x0076, -3 },  // (First char = [0x0076, v], Second char = [0x0063, c], Kerning dist = -3)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x0063, c], Kerning dist = -3)
    { 0x0078, -3 },  // (First char = [0x0078, x], Second char = [0x0063, c], Kerning dist = -3)
    { 0x0079, -3 },  // (First char = [0x0079, y], Second char = [0x0063, c], Kerning dist = -3)
    { 0x002F, -7 },  // (First char = [0x002F, slash], Second char = [0x0064, d], Kerning dist = -7)
    { 0x004B, -4 },  // (First char = [0x004B, K], Second char = [0x0064, d], Kerning dist = -4)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x0064, d], Kerning dist = -7)
    { 0x0056, -12 },  // (First char = [0x0056, V], Second char = [0x0064, d], Kerning dist = -12)
    { 0x0057, -9 },  // (First char = [0x0057, W], Second char = [0x0064, d], Kerning dist = -9)
    { 0x0058, -4 },  // (First char = [0x0058, X], Second char = [0x0064, d], Kerning dist = -4)
    { 0x0059, -17 },  // (First char = [0x0059, Y], Second char = [0x0064, d], Kerning dist = -17)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x0064, d], Kerning dist = -3)
    { 0x0076, -3 },  // (First char = [0x0076, v], Second char = [0x0064, d], Kerning dist = -3)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x0064, d], Kerning dist = -3)
    { 0x0078, -3 },  // (First char = [0x0078, x], Second char = [0x0064, d], Kerning dist = -3)
    { 0x0079, -3 },  // (First char = [0x0079, y], Second char = [0x0064, d], Kerning dist = -3)
    { 0x002F, -7 },  // (First char = [0x002F, slash], Second char = [0x0065, e], Kerning dist = -7)
    { 0x004B, -4 },  // (First char = [0x004B, K], Second char = [0x0065, e], Kerning dist = -4)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -7)
    { 0x0056, -12 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -12)
    { 0x0057, -9 },  // (First char = [0x0057, W], Second char = [0x0065, e], Kerning dist = -9)
    { 0x0058, -4 },  // (First char = [0x0058, X], Second char = [0x0065, e], Kerning dist = -4)
    { 0x0059, -17 },  // (First char = [0x0059, Y], Second char = [0x0065, e], Kerning dist = -17)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x0065, e], Kerning dist = -3)
    { 0x0076, -3 },  // (First char = [0x0076, v], Second char = [0x0065, e], Kerning dist = -3)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x0065, e], Kerning dist = -3)
    { 0x0078, -3 },  // (First char = [0x0078, x], Second char = [0x0065, e], Kerning dist = -3)
    { 0x0079, -3 },  // (First char = [0x0079, y], Second char = [0x0065, e], Kerning dist = -3)
    { 0x002C, -3 },  // (First char = [0x002C, comma], Second char = [0x0066, f], Kerning dist = -3)
    { 0x002E, -3 },  // (First char = [0x002E, period], Second char = [0x0066, f], Kerning dist = -3)
    { 0x004B, -12 },  // (First char = [0x004B, K], Second char = [0x0066, f], Kerning dist = -12)
    { 0x004C, -12 },  // (First char = [0x004C, L], Second char = [0x0066, f], Kerning dist = -12)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0066, f], Kerning dist = -2)
    { 0x0056, -7 },  // (First char = [0x0056, V], Second char = [0x0066, f], Kerning dist = -7)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x0066, f], Kerning dist = -4)
    { 0x0058, -12 },  // (First char = [0x0058, X], Second char = [0x0066, f], Kerning dist = -12)
    { 0x0059, -12 },  // (First char = [0x0059, Y], Second char = [0x0066, f], Kerning dist = -12)
    { 0x006B, -4 },  // (First char = [0x006B, k], Second char = [0x0066, f], Kerning dist = -4)
    { 0x0078, -3 },  // (First char = [0x0078, x], Second char = [0x0066, f], Kerning dist = -3)
    { 0x002F, -7 },  // (First char = [0x002F, slash], Second char = [0x0067, g], Kerning dist = -7)
    { 0x004B, -4 },  // (First char = [0x004B, K], Second char = [0x0067, g], Kerning dist = -4)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x0067, g], Kerning dist = -7)
    { 0x0056, -12 },  // (First char = [0x0056, V], Second char = [0x0067, g], Kerning dist = -12)
    { 0x0057, -9 },  // (First char = [0x0057, W], Second char = [0x0067, g], Kerning dist = -9)
    { 0x0058, -4 },  // (First char = [0x0058, X], Second char = [0x0067, g], Kerning dist = -4)
    { 0x0059, -17 },  // (First char = [0x0059, Y], Second char = [0x0067, g], Kerning dist = -17)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x0067, g], Kerning dist = -3)
    { 0x0076, -3 },  // (First char = [0x0076, v], Second char = [0x0067, g], Kerning dist = -3)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x0067, g], Kerning dist = -3)
    { 0x0078, -3 },  // (First char = [0x0078, x], Second char = [0x0067, g], Kerning dist = -3)
    { 0x0079, -3 },  // (First char = [0x0079, y], Second char = [0x0067, g], Kerning dist = -3)
    { 0x0022, -10 },  // (First char = [0x0022, quotedbl], Second char = [0x006A, j], Kerning dist = -10)
    { 0x0027, -10 },  // (First char = [0x0027, quotesingle], Second char = [0x006A, j], Kerning dist = -10)
    { 0x002C,  3 },  // (First char = [0x002C, comma], Second char = [0x006A, j], Kerning dist = 3)
    { 0x002E,  3 },  // (First char = [0x002E, period], Second char = [0x006A, j], Kerning dist = 3)
    { 0x002F, -10 },  // (First char = [0x002F, slash], Second char = [0x006A, j], Kerning dist = -10)
    { 0x0044, -3 },  // (First char = [0x0044, D], Second char = [0x006A, j], Kerning dist = -3)
    { 0x0045,  4 },  // (First char = [0x0045, E], Second char = [0x006A, j], Kerning dist = 4)
    { 0x0046, -8 },  // (First char = [0x0046, F], Second char = [0x006A, j], Kerning dist = -8)
    { 0x0048,  4 },  // (First char = [0x0048, H], Second char = [0x006A, j], Kerning dist = 4)
    { 0x0049,  4 },  // (First char = [0x0049, I], Second char = [0x006A, j], Kerning dist = 4)
    { 0x004B,  4 },  // (First char = [0x004B, K], Second char = [0x006A, j], Kerning dist = 4)
    { 0x004C,  4 },  // (First char = [0x004C, L], Second char = [0x006A, j], Kerning dist = 4)
    { 0x004D,  4 },  // (First char = [0x004D, M], Second char = [0x006A, j], Kerning dist = 4)
    { 0x004E,  4 },  // (First char = [0x004E, N], Second char = [0x006A, j], Kerning dist = 4)
    { 0x0050, -6 },  // (First char = [0x0050, P], Second char = [0x006A, j], Kerning dist = -6)
    { 0x0051,  7 },  // (First char = [0x0051, Q], Second char = [0x006A, j], Kerning dist = 7)
    { 0x0052,  4 },  // (First char = [0x0052, R], Second char = [0x006A, j], Kerning dist = 4)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x006A, j], Kerning dist = -7)
    { 0x0056, -10 },  // (First char = [0x0056, V], Second char = [0x006A, j], Kerning dist = -10)
    { 0x0057, -10 },  // (First char = [0x0057, W], Second char = [0x006A, j], Kerning dist = -10)
    { 0x0058,  4 },  // (First char = [0x0058, X], Second char = [0x006A, j], Kerning dist = 4)
    { 0x0059, -10 },  // (First char = [0x0059, Y], Second char = [0x006A, j], Kerning dist = -10)
    { 0x005A,  4 },  // (First char = [0x005A, Z], Second char = [0x006A, j], Kerning dist = 4)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0064,  3 },  // (First char = [0x0064, d], Second char = [0x006A, j], Kerning dist = 3)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0066, -8 },  // (First char = [0x0066, f], Second char = [0x006A, j], Kerning dist = -8)
    { 0x0067,  9 },  // (First char = [0x0067, g], Second char = [0x006A, j], Kerning dist = 9)
    { 0x0068,  3 },  // (First char = [0x0068, h], Second char = [0x006A, j], Kerning dist = 3)
    { 0x0069,  3 },  // (First char = [0x0069, i], Second char = [0x006A, j], Kerning dist = 3)
    { 0x006A,  9 },  // (First char = [0x006A, j], Second char = [0x006A, j], Kerning dist = 9)
    { 0x006B,  4 },  // (First char = [0x006B, k], Second char = [0x006A, j], Kerning dist = 4)
    { 0x006C,  3 },  // (First char = [0x006C, l], Second char = [0x006A, j], Kerning dist = 3)
    { 0x006D,  3 },  // (First char = [0x006D, m], Second char = [0x006A, j], Kerning dist = 3)
    { 0x006E,  3 },  // (First char = [0x006E, n], Second char = [0x006A, j], Kerning dist = 3)
    { 0x0071, 11 },  // (First char = [0x0071, q], Second char = [0x006A, j], Kerning dist = 11)
    { 0x0072, -8 },  // (First char = [0x0072, r], Second char = [0x006A, j], Kerning dist = -8)
    { 0x0074,  4 },  // (First char = [0x0074, t], Second char = [0x006A, j], Kerning dist = 4)
    { 0x0075,  3 },  // (First char = [0x0075, u], Second char = [0x006A, j], Kerning dist = 3)
    { 0x0076, -10 },  // (First char = [0x0076, v], Second char = [0x006A, j], Kerning dist = -10)
    { 0x0077, -10 },  // (First char = [0x0077, w], Second char = [0x006A, j], Kerning dist = -10)
    { 0x0078,  3 },  // (First char = [0x0078, x], Second char = [0x006A, j], Kerning dist = 3)
    { 0x0079, -10 },  // (First char = [0x0079, y], Second char = [0x006A, j], Kerning dist = -10)
    { 0x007A,  3 },  // (First char = [0x007A, z], Second char = [0x006A, j], Kerning dist = 3)
    { 0x002F, -5 },  // (First char = [0x002F, slash], Second char = [0x006D, m], Kerning dist = -5)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x006D, m], Kerning dist = -5)
    { 0x0056, -7 },  // (First char = [0x0056, V], Second char = [0x006D, m], Kerning dist = -7)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x006D, m], Kerning dist = -4)
    { 0x0059, -12 },  // (First char = [0x0059, Y], Second char = [0x006D, m], Kerning dist = -12)
    { 0x002F, -5 },  // (First char = [0x002F, slash], Second char = [0x006E, n], Kerning dist = -5)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x006E, n], Kerning dist = -5)
    { 0x0056, -7 },  // (First char = [0x0056, V], Second char = [0x006E, n], Kerning dist = -7)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x006E, n], Kerning dist = -4)
    { 0x0059, -12 },  // (First char = [0x0059, Y], Second char = [0x006E, n], Kerning dist = -12)
    { 0x002F, -7 },  // (First char = [0x002F, slash], Second char = [0x006F, o], Kerning dist = -7)
    { 0x004B, -4 },  // (First char = [0x004B, K], Second char = [0x006F, o], Kerning dist = -4)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -7)
    { 0x0056, -12 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -12)
    { 0x0057, -9 },  // (First char = [0x0057, W], Second char = [0x006F, o], Kerning dist = -9)
    { 0x0058, -4 },  // (First char = [0x0058, X], Second char = [0x006F, o], Kerning dist = -4)
    { 0x0059, -17 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -17)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0076, -3 },  // (First char = [0x0076, v], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0078, -3 },  // (First char = [0x0078, x], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0079, -3 },  // (First char = [0x0079, y], Second char = [0x006F, o], Kerning dist = -3)
    { 0x002F, -5 },  // (First char = [0x002F, slash], Second char = [0x0070, p], Kerning dist = -5)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x0070, p], Kerning dist = -5)
    { 0x0056, -7 },  // (First char = [0x0056, V], Second char = [0x0070, p], Kerning dist = -7)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x0070, p], Kerning dist = -4)
    { 0x0059, -12 },  // (First char = [0x0059, Y], Second char = [0x0070, p], Kerning dist = -12)
    { 0x002F, -7 },  // (First char = [0x002F, slash], Second char = [0x0071, q], Kerning dist = -7)
    { 0x004B, -4 },  // (First char = [0x004B, K], Second char = [0x0071, q], Kerning dist = -4)
    { 0x0056, -12 },  // (First char = [0x0056, V], Second char = [0x0071, q], Kerning dist = -12)
    { 0x0057, -9 },  // (First char = [0x0057, W], Second char = [0x0071, q], Kerning dist = -9)
    { 0x0058, -4 },  // (First char = [0x0058, X], Second char = [0x0071, q], Kerning dist = -4)
    { 0x0059, -17 },  // (First char = [0x0059, Y], Second char = [0x0071, q], Kerning dist = -17)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x0071, q], Kerning dist = -3)
    { 0x0076, -3 },  // (First char = [0x0076, v], Second char = [0x0071, q], Kerning dist = -3)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x0071, q], Kerning dist = -3)
    { 0x0078, -3 },  // (First char = [0x0078, x], Second char = [0x0071, q], Kerning dist = -3)
    { 0x0079, -3 },  // (First char = [0x0079, y], Second char = [0x0071, q], Kerning dist = -3)
    { 0x002F, -8 },  // (First char = [0x002F, slash], Second char = [0x0072, r], Kerning dist = -8)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x0072, r], Kerning dist = -5)
    { 0x0056, -7 },  // (First char = [0x0056, V], Second char = [0x0072, r], Kerning dist = -7)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x0072, r], Kerning dist = -4)
    { 0x0059, -12 },  // (First char = [0x0059, Y], Second char = [0x0072, r], Kerning dist = -12)
    { 0x002F, -5 },  // (First char = [0x002F, slash], Second char = [0x0073, s], Kerning dist = -5)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -7)
    { 0x0056, -9 },  // (First char = [0x0056, V], Second char = [0x0073, s], Kerning dist = -9)
    { 0x0057, -6 },  // (First char = [0x0057, W], Second char = [0x0073, s], Kerning dist = -6)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0059, -14 },  // (First char = [0x0059, Y], Second char = [0x0073, s], Kerning dist = -14)
    { 0x006B, -2 },  // (First char = [0x006B, k], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0076, -3 },  // (First char = [0x0076, v], Second char = [0x0073, s], Kerning dist = -3)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x0073, s], Kerning dist = -3)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0079, -3 },  // (First char = [0x0079, y], Second char = [0x0073, s], Kerning dist = -3)
    { 0x002C, -13 },  // (First char = [0x002C, comma], Second char = [0x0074, t], Kerning dist = -13)
    { 0x002E, -13 },  // (First char = [0x002E, period], Second char = [0x0074, t], Kerning dist = -13)
    { 0x002F, -5 },  // (First char = [0x002F, slash], Second char = [0x0074, t], Kerning dist = -5)
    { 0x004B, -11 },  // (First char = [0x004B, K], Second char = [0x0074, t], Kerning dist = -11)
    { 0x004C, -12 },  // (First char = [0x004C, L], Second char = [0x0074, t], Kerning dist = -12)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0074, t], Kerning dist = -4)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x0074, t], Kerning dist = -5)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0074, t], Kerning dist = -2)
    { 0x0058, -11 },  // (First char = [0x0058, X], Second char = [0x0074, t], Kerning dist = -11)
    { 0x0059, -10 },  // (First char = [0x0059, Y], Second char = [0x0074, t], Kerning dist = -10)
    { 0x002F, -5 },  // (First char = [0x002F, slash], Second char = [0x0075, u], Kerning dist = -5)
    { 0x004B, -4 },  // (First char = [0x004B, K], Second char = [0x0075, u], Kerning dist = -4)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -5)
    { 0x0056, -7 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -7)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x0075, u], Kerning dist = -4)
    { 0x0058, -4 },  // (First char = [0x0058, X], Second char = [0x0075, u], Kerning dist = -4)
    { 0x0059, -11 },  // (First char = [0x0059, Y], Second char = [0x0075, u], Kerning dist = -11)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0075, u], Kerning dist = -1)
    { 0x002C, -11 },  // (First char = [0x002C, comma], Second char = [0x0076, v], Kerning dist = -11)
    { 0x002E, -11 },  // (First char = [0x002E, period], Second char = [0x0076, v], Kerning dist = -11)
    { 0x002F, -3 },  // (First char = [0x002F, slash], Second char = [0x0076, v], Kerning dist = -3)
    { 0x004B, -12 },  // (First char = [0x004B, K], Second char = [0x0076, v], Kerning dist = -12)
    { 0x004C, -14 },  // (First char = [0x004C, L], Second char = [0x0076, v], Kerning dist = -14)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x0076, v], Kerning dist = -5)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0076, v], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0058, -11 },  // (First char = [0x0058, X], Second char = [0x0076, v], Kerning dist = -11)
    { 0x0059, -7 },  // (First char = [0x0059, Y], Second char = [0x0076, v], Kerning dist = -7)
    { 0x0062, -3 },  // (First char = [0x0062, b], Second char = [0x0076, v], Kerning dist = -3)
    { 0x0063, -3 },  // (First char = [0x0063, c], Second char = [0x0076, v], Kerning dist = -3)
    { 0x0065, -3 },  // (First char = [0x0065, e], Second char = [0x0076, v], Kerning dist = -3)
    { 0x0068, -3 },  // (First char = [0x0068, h], Second char = [0x0076, v], Kerning dist = -3)
    { 0x006D, -3 },  // (First char = [0x006D, m], Second char = [0x0076, v], Kerning dist = -3)
    { 0x006E, -3 },  // (First char = [0x006E, n], Second char = [0x0076, v], Kerning dist = -3)
    { 0x006F, -3 },  // (First char = [0x006F, o], Second char = [0x0076, v], Kerning dist = -3)
    { 0x0070, -3 },  // (First char = [0x0070, p], Second char = [0x0076, v], Kerning dist = -3)
    { 0x0073, -3 },  // (First char = [0x0073, s], Second char = [0x0076, v], Kerning dist = -3)
    { 0x002C, -9 },  // (First char = [0x002C, comma], Second char = [0x0077, w], Kerning dist = -9)
    { 0x002E, -9 },  // (First char = [0x002E, period], Second char = [0x0077, w], Kerning dist = -9)
    { 0x002F, -3 },  // (First char = [0x002F, slash], Second char = [0x0077, w], Kerning dist = -3)
    { 0x004B, -12 },  // (First char = [0x004B, K], Second char = [0x0077, w], Kerning dist = -12)
    { 0x004C, -10 },  // (First char = [0x004C, L], Second char = [0x0077, w], Kerning dist = -10)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x0077, w], Kerning dist = -5)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0077, w], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0058, -11 },  // (First char = [0x0058, X], Second char = [0x0077, w], Kerning dist = -11)
    { 0x0059, -7 },  // (First char = [0x0059, Y], Second char = [0x0077, w], Kerning dist = -7)
    { 0x0062, -3 },  // (First char = [0x0062, b], Second char = [0x0077, w], Kerning dist = -3)
    { 0x0063, -3 },  // (First char = [0x0063, c], Second char = [0x0077, w], Kerning dist = -3)
    { 0x0065, -3 },  // (First char = [0x0065, e], Second char = [0x0077, w], Kerning dist = -3)
    { 0x0068, -3 },  // (First char = [0x0068, h], Second char = [0x0077, w], Kerning dist = -3)
    { 0x006D, -3 },  // (First char = [0x006D, m], Second char = [0x0077, w], Kerning dist = -3)
    { 0x006E, -3 },  // (First char = [0x006E, n], Second char = [0x0077, w], Kerning dist = -3)
    { 0x006F, -3 },  // (First char = [0x006F, o], Second char = [0x0077, w], Kerning dist = -3)
    { 0x0070, -3 },  // (First char = [0x0070, p], Second char = [0x0077, w], Kerning dist = -3)
    { 0x0073, -3 },  // (First char = [0x0073, s], Second char = [0x0077, w], Kerning dist = -3)
    { 0x002F, -3 },  // (First char = [0x002F, slash], Second char = [0x0078, x], Kerning dist = -3)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x0078, x], Kerning dist = -5)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0078, x], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0059, -7 },  // (First char = [0x0059, Y], Second char = [0x0078, x], Kerning dist = -7)
    { 0x0062, -3 },  // (First char = [0x0062, b], Second char = [0x0078, x], Kerning dist = -3)
    { 0x0063, -3 },  // (First char = [0x0063, c], Second char = [0x0078, x], Kerning dist = -3)
    { 0x0065, -3 },  // (First char = [0x0065, e], Second char = [0x0078, x], Kerning dist = -3)
    { 0x006F, -3 },  // (First char = [0x006F, o], Second char = [0x0078, x], Kerning dist = -3)
    { 0x0070, -3 },  // (First char = [0x0070, p], Second char = [0x0078, x], Kerning dist = -3)
    { 0x0073, -2 },  // (First char = [0x0073, s], Second char = [0x0078, x], Kerning dist = -2)
    { 0x002C, -5 },  // (First char = [0x002C, comma], Second char = [0x0079, y], Kerning dist = -5)
    { 0x002E, -5 },  // (First char = [0x002E, period], Second char = [0x0079, y], Kerning dist = -5)
    { 0x002F, -3 },  // (First char = [0x002F, slash], Second char = [0x0079, y], Kerning dist = -3)
    { 0x004B, -5 },  // (First char = [0x004B, K], Second char = [0x0079, y], Kerning dist = -5)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x0079, y], Kerning dist = -7)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x0079, y], Kerning dist = -5)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0079, y], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0058, -5 },  // (First char = [0x0058, X], Second char = [0x0079, y], Kerning dist = -5)
    { 0x0059, -7 },  // (First char = [0x0059, Y], Second char = [0x0079, y], Kerning dist = -7)
    { 0x0062, -3 },  // (First char = [0x0062, b], Second char = [0x0079, y], Kerning dist = -3)
    { 0x0063, -3 },  // (First char = [0x0063, c], Second char = [0x0079, y], Kerning dist = -3)
    { 0x0065, -3 },  // (First char = [0x0065, e], Second char = [0x0079, y], Kerning dist = -3)
    { 0x0068, -3 },  // (First char = [0x0068, h], Second char = [0x0079, y], Kerning dist = -3)
    { 0x006D, -3 },  // (First char = [0x006D, m], Second char = [0x0079, y], Kerning dist = -3)
    { 0x006E, -3 },  // (First char = [0x006E, n], Second char = [0x0079, y], Kerning dist = -3)
    { 0x006F, -3 },  // (First char = [0x006F, o], Second char = [0x0079, y], Kerning dist = -3)
    { 0x0070, -3 },  // (First char = [0x0070, p], Second char = [0x0079, y], Kerning dist = -3)
    { 0x0073, -3 },  // (First char = [0x0073, s], Second char = [0x0079, y], Kerning dist = -3)
    { 0x002F, -5 },  // (First char = [0x002F, slash], Second char = [0x007A, z], Kerning dist = -5)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x007A, z], Kerning dist = -7)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x007A, z], Kerning dist = -4)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0059, -11 },  // (First char = [0x0059, Y], Second char = [0x007A, z], Kerning dist = -11)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x007A, z], Kerning dist = -2)
};
